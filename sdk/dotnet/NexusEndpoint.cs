// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace GripSecurity.Temporalcloud
{
    /// <summary>
    /// Provisions a Temporal Cloud Nexus endpoint.
    /// 
    /// ## Import
    /// 
    /// Nexus Endpoints can be imported to incorporate existing Nexus Endpoints into your Terraform pipeline.
    /// 
    /// To import a Nexus Endpoint, you need
    /// 
    /// - a resource configuration in your Terraform configuration file/module to accept the imported Nexus Endpoint. In the example below, the placeholder is "temporalcloud_nexus_endpoint" "nexus_endpoint"
    /// 
    /// - the Nexus Endpoint's ID, which is found using the Temporal Cloud CLI tcld nexus endpoint list. In the example below, this is 405f7da4224a43d99c211904ed9b3819
    /// 
    /// ```sh
    /// $ pulumi import temporalcloud:index/nexusEndpoint:NexusEndpoint nexus_endpoint 405f7da4224a43d99c211904ed9b3819
    /// ```
    /// </summary>
    [TemporalcloudResourceType("temporalcloud:index/nexusEndpoint:NexusEndpoint")]
    public partial class NexusEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Namespace Id(s) that are allowed to call this Endpoint.
        /// </summary>
        [Output("allowedCallerNamespaces")]
        public Output<ImmutableArray<string>> AllowedCallerNamespaces { get; private set; } = null!;

        /// <summary>
        /// The description for the Nexus endpoint.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the endpoint. Must be unique within an account and match `^[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9]$`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.NexusEndpointTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// A target spec for routing nexus requests to a specific cloud namespace worker.
        /// </summary>
        [Output("workerTarget")]
        public Output<Outputs.NexusEndpointWorkerTarget> WorkerTarget { get; private set; } = null!;


        /// <summary>
        /// Create a NexusEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NexusEndpoint(string name, NexusEndpointArgs args, CustomResourceOptions? options = null)
            : base("temporalcloud:index/nexusEndpoint:NexusEndpoint", name, args ?? new NexusEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NexusEndpoint(string name, Input<string> id, NexusEndpointState? state = null, CustomResourceOptions? options = null)
            : base("temporalcloud:index/nexusEndpoint:NexusEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/Grip-Security/pulumi-temporalcloud/releases/download/v${VERSION}/",
                AdditionalSecretOutputs =
                {
                    "description",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NexusEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NexusEndpoint Get(string name, Input<string> id, NexusEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new NexusEndpoint(name, id, state, options);
        }
    }

    public sealed class NexusEndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedCallerNamespaces", required: true)]
        private InputList<string>? _allowedCallerNamespaces;

        /// <summary>
        /// Namespace Id(s) that are allowed to call this Endpoint.
        /// </summary>
        public InputList<string> AllowedCallerNamespaces
        {
            get => _allowedCallerNamespaces ?? (_allowedCallerNamespaces = new InputList<string>());
            set => _allowedCallerNamespaces = value;
        }

        [Input("description")]
        private Input<string>? _description;

        /// <summary>
        /// The description for the Nexus endpoint.
        /// </summary>
        public Input<string>? Description
        {
            get => _description;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _description = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the endpoint. Must be unique within an account and match `^[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9]$`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("timeouts")]
        public Input<Inputs.NexusEndpointTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// A target spec for routing nexus requests to a specific cloud namespace worker.
        /// </summary>
        [Input("workerTarget", required: true)]
        public Input<Inputs.NexusEndpointWorkerTargetArgs> WorkerTarget { get; set; } = null!;

        public NexusEndpointArgs()
        {
        }
        public static new NexusEndpointArgs Empty => new NexusEndpointArgs();
    }

    public sealed class NexusEndpointState : global::Pulumi.ResourceArgs
    {
        [Input("allowedCallerNamespaces")]
        private InputList<string>? _allowedCallerNamespaces;

        /// <summary>
        /// Namespace Id(s) that are allowed to call this Endpoint.
        /// </summary>
        public InputList<string> AllowedCallerNamespaces
        {
            get => _allowedCallerNamespaces ?? (_allowedCallerNamespaces = new InputList<string>());
            set => _allowedCallerNamespaces = value;
        }

        [Input("description")]
        private Input<string>? _description;

        /// <summary>
        /// The description for the Nexus endpoint.
        /// </summary>
        public Input<string>? Description
        {
            get => _description;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _description = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the endpoint. Must be unique within an account and match `^[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9]$`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("timeouts")]
        public Input<Inputs.NexusEndpointTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// A target spec for routing nexus requests to a specific cloud namespace worker.
        /// </summary>
        [Input("workerTarget")]
        public Input<Inputs.NexusEndpointWorkerTargetGetArgs>? WorkerTarget { get; set; }

        public NexusEndpointState()
        {
        }
        public static new NexusEndpointState Empty => new NexusEndpointState();
    }
}
