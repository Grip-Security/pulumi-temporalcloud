// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace GripSecurity.Temporalcloud.Outputs
{

    [OutputType]
    public sealed class GetNamespacesNamespaceResult
    {
        /// <summary>
        /// The Base64-encoded CA cert in PEM format that clients use when authenticating with Temporal Cloud.
        /// </summary>
        public readonly string AcceptedClientCa;
        /// <summary>
        /// The currently active region for the namespace.
        /// </summary>
        public readonly string ActiveRegion;
        /// <summary>
        /// If true, Temporal Cloud will use API key authentication for this namespace. If false, mutual TLS (mTLS) authentication will be used.
        /// </summary>
        public readonly bool? ApiKeyAuth;
        /// <summary>
        /// A list of filters to apply to client certificates when initiating a connection Temporal Cloud. If present, connections will only be allowed from client certificates whose distinguished name properties match at least one of the filters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespacesNamespaceCertificateFilterResult> CertificateFilters;
        /// <summary>
        /// A codec server is used by the Temporal Cloud UI to decode payloads for all users interacting with this namespace, even if the workflow history itself is encrypted.
        /// </summary>
        public readonly Outputs.GetNamespacesNamespaceCodecServerResult CodecServer;
        /// <summary>
        /// The date and time when the namespace was created.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// The custom search attributes to use for the namespace.
        /// </summary>
        public readonly ImmutableDictionary<string, string> CustomSearchAttributes;
        /// <summary>
        /// The endpoints for the namespace.
        /// </summary>
        public readonly Outputs.GetNamespacesNamespaceEndpointsResult Endpoints;
        /// <summary>
        /// The unique identifier of the namespace across all Temporal Cloud tenants.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The date and time when the namespace was last modified. Will not be set if the namespace has never been modified.
        /// </summary>
        public readonly string LastModifiedTime;
        /// <summary>
        /// The limits set on the namespace currently.
        /// </summary>
        public readonly Outputs.GetNamespacesNamespaceLimitsResult Limits;
        /// <summary>
        /// The name of the namespace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The private connectivities for the namespace, if any.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespacesNamespacePrivateConnectivityResult> PrivateConnectivities;
        public readonly ImmutableArray<string> Regions;
        /// <summary>
        /// The number of days to retain workflow history. Any changes to the retention period will be applied to all new running workflows.
        /// </summary>
        public readonly int RetentionDays;
        /// <summary>
        /// The current state of the namespace.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetNamespacesNamespaceResult(
            string acceptedClientCa,

            string activeRegion,

            bool? apiKeyAuth,

            ImmutableArray<Outputs.GetNamespacesNamespaceCertificateFilterResult> certificateFilters,

            Outputs.GetNamespacesNamespaceCodecServerResult codecServer,

            string createdTime,

            ImmutableDictionary<string, string> customSearchAttributes,

            Outputs.GetNamespacesNamespaceEndpointsResult endpoints,

            string id,

            string lastModifiedTime,

            Outputs.GetNamespacesNamespaceLimitsResult limits,

            string name,

            ImmutableArray<Outputs.GetNamespacesNamespacePrivateConnectivityResult> privateConnectivities,

            ImmutableArray<string> regions,

            int retentionDays,

            string state)
        {
            AcceptedClientCa = acceptedClientCa;
            ActiveRegion = activeRegion;
            ApiKeyAuth = apiKeyAuth;
            CertificateFilters = certificateFilters;
            CodecServer = codecServer;
            CreatedTime = createdTime;
            CustomSearchAttributes = customSearchAttributes;
            Endpoints = endpoints;
            Id = id;
            LastModifiedTime = lastModifiedTime;
            Limits = limits;
            Name = name;
            PrivateConnectivities = privateConnectivities;
            Regions = regions;
            RetentionDays = retentionDays;
            State = state;
        }
    }
}
