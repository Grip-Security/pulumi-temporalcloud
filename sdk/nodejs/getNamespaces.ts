// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as temporalcloud from "@pulumi/temporalcloud";
 *
 * const myNamespaces = temporalcloud.getNamespaces({});
 * export const namespaces = myNamespaces.then(myNamespaces => myNamespaces.namespaces);
 * ```
 */
export function getNamespaces(opts?: pulumi.InvokeOptions): Promise<GetNamespacesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("temporalcloud:index/getNamespaces:getNamespaces", {
    }, opts);
}

/**
 * A collection of values returned by getNamespaces.
 */
export interface GetNamespacesResult {
    /**
     * The ID of this resource.
     */
    readonly id: string;
    readonly namespaces: outputs.GetNamespacesNamespace[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as temporalcloud from "@pulumi/temporalcloud";
 *
 * const myNamespaces = temporalcloud.getNamespaces({});
 * export const namespaces = myNamespaces.then(myNamespaces => myNamespaces.namespaces);
 * ```
 */
export function getNamespacesOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNamespacesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("temporalcloud:index/getNamespaces:getNamespaces", {
    }, opts);
}
