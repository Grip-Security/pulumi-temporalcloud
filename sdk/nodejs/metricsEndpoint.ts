// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Configures a Temporal Cloud account's metrics
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import temporalcloud:index/metricsEndpoint:MetricsEndpoint terraform terraform.account-11111-metrics
 * ```
 */
export class MetricsEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing MetricsEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MetricsEndpointState, opts?: pulumi.CustomResourceOptions): MetricsEndpoint {
        return new MetricsEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'temporalcloud:index/metricsEndpoint:MetricsEndpoint';

    /**
     * Returns true if the given object is an instance of MetricsEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MetricsEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MetricsEndpoint.__pulumiType;
    }

    /**
     * The Base64-encoded CA cert in PEM format used to authenticate clients connecting to the metrics endpoint.
     */
    public readonly acceptedClientCa!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.MetricsEndpointTimeouts | undefined>;
    /**
     * The Prometheus metrics endpoint URI
     */
    public /*out*/ readonly uri!: pulumi.Output<string>;

    /**
     * Create a MetricsEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetricsEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MetricsEndpointArgs | MetricsEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MetricsEndpointState | undefined;
            resourceInputs["acceptedClientCa"] = state ? state.acceptedClientCa : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as MetricsEndpointArgs | undefined;
            if ((!args || args.acceptedClientCa === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceptedClientCa'");
            }
            resourceInputs["acceptedClientCa"] = args ? args.acceptedClientCa : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["uri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MetricsEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MetricsEndpoint resources.
 */
export interface MetricsEndpointState {
    /**
     * The Base64-encoded CA cert in PEM format used to authenticate clients connecting to the metrics endpoint.
     */
    acceptedClientCa?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MetricsEndpointTimeouts>;
    /**
     * The Prometheus metrics endpoint URI
     */
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MetricsEndpoint resource.
 */
export interface MetricsEndpointArgs {
    /**
     * The Base64-encoded CA cert in PEM format used to authenticate clients connecting to the metrics endpoint.
     */
    acceptedClientCa: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MetricsEndpointTimeouts>;
}
