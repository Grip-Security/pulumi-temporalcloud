// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as temporalcloud from "@pulumi/temporalcloud";
 *
 * export = async () => {
 *     const regions = await temporalcloud.getRegions({});
 *     return {
 *         regions: regions.regions,
 *     };
 * }
 * ```
 */
export function getRegions(opts?: pulumi.InvokeOptions): Promise<GetRegionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("temporalcloud:index/getRegions:getRegions", {
    }, opts);
}

/**
 * A collection of values returned by getRegions.
 */
export interface GetRegionsResult {
    /**
     * The ID of this resource.
     */
    readonly id: string;
    readonly regions: outputs.GetRegionsRegion[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as temporalcloud from "@pulumi/temporalcloud";
 *
 * export = async () => {
 *     const regions = await temporalcloud.getRegions({});
 *     return {
 *         regions: regions.regions,
 *     };
 * }
 * ```
 */
export function getRegionsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("temporalcloud:index/getRegions:getRegions", {
    }, opts);
}
